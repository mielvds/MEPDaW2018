// ------------------------------------------------------------------
// Lists
// ------------------------------------------------------------------

$smaller-fontsize: 7/8*$fontsize;

// All lists
ol, ul {
	margin:0 0 0 $left;

	li {
		font-weight:bold;
		margin-bottom: $lineheight;
		page-break-inside:avoid;
	}

	// Nested lists
	ol, ul {
		li {
			font-size: $smaller-fontsize;
			font-weight: normal;
			margin-bottom: 0;
		}
	}
}

// Numbered lists
ol {
	counter-reset:list;

	> li:before {
		counter-increment:list;
		content:counter(list);
		position:absolute;
		width:3em;
		margin-left:-3em;
		color:$grey;
		text-align:right;
		padding-right:0.5em;
	}

	// Nested lists
	ol {
		> li:before {
			content:counter(list, lower-alpha);
		}
	}
}

// Inline lists
li {
	// Inline items and nested lists
	ol, ul {
		&.inline > li, ol.inline, ul.inline {
			margin-left: 0;
			display: inline;
		}
	}
	// Use commas between unordered items
	ul.inline > li {
		&:after { content: ','; }
		&:last-child:after { content: ''; }
	}
	// Use dashes between ordered items
	ol.inline > li {
		&:after { content: ' – '; }
		&:before, &:last-child:after { content: ''; }
	}
}

// Clearfix for floats inside of top-level lists
> ul, > ol {
	> li {
		clear: left;
		&:after {
			content: '';
			display: table;
			clear: both;
		}
	}
}

// Definition lists
dl {
  margin: 0 0 $lineheight $left;

	dt {
		float: left;
		clear: left;
		min-width: 160px;
		font-weight: bold;
		margin: $lineheight .5em 0 0;
	}
	dd {
		margin: $lineheight 0 0 192px;
	}
	dt:first-of-type, dd:first-of-type, dd + dd {
		margin-top: 0;
	}
}
// Definition lists inside of lists
li {
	dl {
		font-size: $smaller-fontsize;
		font-weight: normal;

		// display terms and their items inline
		dt {
			display: inline;
			margin: 0;
			min-width: 0;
			font-weight: normal;
			font-style: italic;
			&:after {
				content: ": ";
			}
		}
		dd {
			margin: 0;
			float: left;
			+ dd:before {
				content: ', ';
			}
		}
	}
}

// Custom

ol > li[value]::before {
	content:attr(value)'.';
	}
ul > li[value]::before {
	content:attr(value);
	}
